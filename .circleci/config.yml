# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

jobs:
  build:
    # branches:
    #   only:
    #     - develop
        
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
    #   - restore_cache:
    #       keys:
    #       - v2-dependencies-{{ checksum "package.json" }}
    #       # fallback to using the latest cache if no exact match is found
    #       - v2-dependencies-

    #   - run: 
    #       command: yarn install

    #   - save_cache:
    #       key: v2-dependencies-{{ checksum "package.json" }}
    #       paths:
    #         - node_modules
        
    #   # run tests!
    #   - run: 
    #       command: yarn test
    
    #   - setup_remote_docker:   
    #       docker_layer_caching: true 

      # use a primary image that already has Docker (recommended)
      # or install it during a build like we do here
    #   - run:
    #       name: Install Docker client
    #       command: |
    #         set -x
    #         VER="17.03.0-ce"
    #         curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
    #         tar -xz -C /tmp -f /tmp/docker-$VER.tgz
    #         sudo mv /tmp/docker/* /usr/bin

      # build and push Docker image
    #   - run: |
    #       TAG=latest
    #       docker build -t wadman/circleci-demo:$TAG .      
    #       docker login -u $DOCKER_USER -p $DOCKER_PASS         
    #       docker push wadman/circleci-demo:$TAG

  deploy:
    docker: 
      - image: protocool/rancher-circleci:latest

    steps:
      - checkout
      - run: 
          rancher-compose --url $RANCHER_URL --access-key $RANCHER_ACCESS_KEY --secret-key $RANCHER_SECRET_KEY
      - run:
          rancher-compose -f deploy/docker-compose.yml -r deploy/rancher-compose up --debug --force-upgrade --pull -d app-sails 

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
